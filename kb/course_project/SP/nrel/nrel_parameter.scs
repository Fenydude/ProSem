sc_node_not_relation -> concept_variable;;
sc_node_not_relation -> concept_subprogramme;;

sc_node_not_relation -> number;;

sc_node_norole_relation -> nrel_parameter;;
sc_node_norole_relation -> nrel_function;;
sc_node_norole_relation -> nrel_argument;;
nrel_parameter
	=> nrel_main_idtf:
		[parameter]
	    (* <- lang_en;; *);
	=> nrel_main_idtf:
	    [параметр]
	    (* <- lang_ru;; *);;

        
definition ->...
(*
	-> rrel_key_sc_element : nrel_parameter;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Пара́метр — принятый функцией аргумент.](*
<-lang_ru;;
*);;
*);;

	=> nrel_main_idtf: [Определение (параметр)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		nrel_function;
		nrel_argument
	};;
*);;


statement ->...
(*
	-> rrel_key_sc_element : nrel_parameter;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Код передает аргумент в параметр, который определен в члене спецификации функции.](*
<-lang_ru;;
*);;
*);;
	=> nrel_main_idtf: [Утверждение(параметр)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		nrel_argument;
		nrel_function
	};;
*);;

arity -> ..kryg;;
..kryg -> nrel_parameter;;
..kryg => nrel_measurement: 2;;
number -> 2;;

nrel_parameter
=>nrel_first_domain:concept_subprogramme;
=>nrel_second_domain:concept_variable;
=>nrel_definitional_domain: ...(*
<=nrel_combination:
{
concept_subprogramme;
concept_variable
};;
*);;

concept_subprogramme -> ..f;;
..f => nrel_parameter: ..s;;
concept_variable -> ..s;;


relation => nrel_inclusion: oriented_relation;;
relation => nrel_inclusion: norole_relation;;
oriented_relation -> nrel_parameter;;
norole_relation -> nrel_parameter;;
binary_relation => nrel_inclusion: transitive_relation;;
binary_relation => nrel_inclusion: asymetric_relation;;
binary_relation => nrel_inclusion: antisymmetric_relation;;
antireflexive_relation -> nrel_parameter;;
transitive_relation -|> nrel_parameter;;






